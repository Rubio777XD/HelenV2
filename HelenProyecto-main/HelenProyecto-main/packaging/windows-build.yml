name: Windows Build

on:
  workflow_dispatch:
  push:
    paths:
      - backendHelen/**
      - helen/**
      - Hellen_model_RN/**
      - packaging/**

jobs:
  build:
    runs-on: windows-latest
    env:
      PYINSTALLER_DIST: dist
      PYINSTALLER_BUILD: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install runtime dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r packaging/requirements-win.txt
          python -m pip install pyinstaller==6.6.0 pyinstaller-hooks-contrib==2024.6 requests==2.31.0

      - name: Build executable with PyInstaller
        shell: pwsh
        run: |
          python -m PyInstaller --clean --noconfirm --distpath "$env:PYINSTALLER_DIST" --workpath "$env:PYINSTALLER_BUILD" packaging/helen_backend.spec

      - name: Install Inno Setup
        shell: pwsh
        run: |
          choco install innosetup --yes --no-progress

      - name: Build Windows installer
        shell: pwsh
        run: |
          "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" packaging\inno_setup.iss

      - name: Smoke test executable
        shell: pwsh
        run: |
          $exe = Join-Path $PWD (Join-Path $env:PYINSTALLER_DIST 'helen-backend\helen-backend.exe')
          if (-not (Test-Path $exe)) {
            throw "No se encontr√≥ el ejecutable: $exe"
          }
          $arguments = @('--host','127.0.0.1','--port','8765','--no-camera')
          $process = Start-Process -FilePath $exe -ArgumentList $arguments -PassThru -WindowStyle Hidden
          try {
            Start-Sleep -Seconds 6
            $response = Invoke-WebRequest -Uri 'http://127.0.0.1:8765/health' -UseBasicParsing -TimeoutSec 20
            if ($response.StatusCode -ne 200) {
              throw "Respuesta inesperada del backend: $($response.StatusCode)"
            }
          }
          finally {
            if ($process -and -not $process.HasExited) {
              Stop-Process -Id $process.Id -Force
              Start-Sleep -Seconds 2
            }
          }

      - name: Camera diagnostic
        shell: pwsh
        run: |
          python -m backendHelen.diagnostics --allow-missing

      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
          name: helen-windows-build
          path: |
            ${{ env.PYINSTALLER_DIST }}/helen-backend
            ${{ env.PYINSTALLER_DIST }}/Setup Helen.exe
